{
"words" : [
	"astable",
	"behavioural",
	"datasheet",
	"datasheets",
	"demultiplexer",
	"demultiplexers",
	"highpass",
	"lowpass",
	"misformatted", // not in leo
	"monostable",
	"presettable", // not in leo
	"transconductance",
	"retriggerable", // not in leo
	// Names
	"Chebyshev",
	"Raphson",
	"Schmitt",
	"Schottky",
	"Zener",
	// Company names
	"Fairchild",
	"Signetics",
	"Mostek",
	// Technical terms
	"cmos",
	"kaby", // Kaby Lake
	"mosfet",
	"mosfets",
	"nmos",
	"opamp",
	"opamps",
	"pmos",
	// Specific project terms
	"MAME",
	"Couriersud",
	"netlist",
	"netlists",
	"nltool",
	"nlwav",
	"nvcc",
	// FIXME: Remove everything below here again
	"pstring"
],
"languageSettings": [
	// This one works with Python
	{
		"languageId": "python",
		"includeRegExpList": [
			"/#.*/",
			"/('''|\"\"\")[^\\1]+?\\1/g",
			"strings"
		]
	},
	// This one works with JavaScript, Typescript, etc
	{
		"languageId": "javascript,typescript",
		"includeRegExpList": [
			"CStyleComment",
			"strings"
		]
	},
	// Use with cpp or c files
	{
		"languageId": "cpp,c,h",
		// Turn off compound words, because it is only checking strings.
		"allowCompoundWords": false,
		// Only check comments and strings
		//"includeRegExpList": [
		//	"CStyleComment",
		//	"string"
		//],
		"ignoreRegExpList": [
			"/#include.*/",                    // Exclude includes, because they are also strings
			"/#pragma.*/",                     // Exclude pragmas, they may include strings
			"/\/\/ NOLINT:.*/",                // Exclude clang-tidy instructions
			"/\/\/\/ \\\\file.*/",             // Doxygen
			"/\/\/\/ \\\\addtogroup.*/",       // Doxygen
			"/`[^`]+`/",                       // Markup code formatt
			"/} \/\/ namespace.*/",            // Namespace comments
			"/[A-Z][A-Z][A-Z][^\\s]*/",        // Identifiers starting with at least 3 capital letters
			// Project specific exclusions start here
			"/\/\/ copyright-holders.*/",
			"/\/\/- Pinalias:/",
			"/\/\/#.*/",                       // commented source code
			"\/\/ Source:.*/",                 // generated code
			"/\\$[A-z0-9][^\\s]*/",            // everything starting with a $
			"/[A-z][^\\s]+::[^\\s]+/"           // any namespace qualifier
		]
	}
]
}
