<?xml version="1.0"?>

<!-- Authors - InigoMontoya (CoinOps Discord:https://discord.gg/RfMxcFvg), Hugo_Stiglitz_DA (Mortal Kombat Plus Discord:https://discord.gg/qu7EXzYU), TehDrewsus,
Artwork - BloodyDrake, Hugo_Stiglitz_DA -->

<mamelayout version="2">
	<element name="nobezel">
		<image file="nobezel.png"/>
	</element>
	<element name="border">
		<image file="umk3p_bezel.png"/>
	</element>
	<element name="portrait" defstate="30">
		<image state="0" file="kano.png" />
		<image state="1" file="sonya.png" />
		<image state="2" file="jax.png" />
		<image state="3" file="nightwolf.png" />
		<image state="4" file="u_sub_zero.png" />
		<image state="5" file="stryker.png" />
		<image state="6" file="sindel.png" />
		<image state="7" file="sektor.png" />
		<image state="8" file="cyrax.png" />
		<image state="9" file="kung_lao.png" />
		<image state="10" file="kabal.png" />
		<image state="11" file="sheeva.png" />
		<image state="12" file="shang_tsung.png" />
		<image state="13" file="liu_kang.png" />
		<image state="14" file="c_smoke.png" />
		<image state="15" file="kitana.png" />
		<image state="16" file="jade.png" />
		<image state="17" file="mileena.png" />
		<image state="18" file="scorpion.png" />
		<image state="19" file="reptile.png" />
		<image state="20" file="ermac.png" />
		<image state="21" file="c_sub_zero.png" />
		<image state="22" file="h_smoke.png" />
		<image state="23" file="noob_saibot.png" />
		<image state="25" file="shao_kahn.png" />
		<image state="26" file="rain.png" />
		<image state="27" file="chameleon.png" />
		<image state="28" file="triborg.png" />
<!--	<image state="29" file="khameleon.png" />  -->
		<image state="30" file="blankpt.png" />
	</element>
	<element name="background" defstate="0">
		<image state="0" file="blankbg.png" />
		<image state="1" file="bg.png" />
	</element>
	<element name="movelist" defstate="30">
		<image state="0" file="kano_ml.png" />
		<image state="1" file="sonya_ml.png" />
		<image state="2" file="jax_ml.png" />
		<image state="3" file="nightwolf_ml.png" />
		<image state="4" file="u_sub_zero_ml.png" />
		<image state="5" file="stryker_ml.png" />
		<image state="6" file="sindel_ml.png" />
		<image state="7" file="sektor_umk3p_ml.png" />
		<image state="8" file="cyrax_ml.png" />
		<image state="9" file="kung_lao_ml.png" />
		<image state="10" file="kabal_ml.png" />
		<image state="11" file="sheeva_ml.png" />
		<image state="12" file="shang_tsung_ml.png" />
		<image state="13" file="liu_kang_ml.png" />
		<image state="14" file="c_smoke_ml.png" />
		<image state="15" file="kitana_ml.png" />
		<image state="16" file="jade_ml.png" />
		<image state="17" file="mileena_ml.png" />
		<image state="18" file="scorpion_umk3p_ml.png" />
		<image state="19" file="reptile_ml.png" />
		<image state="20" file="ermac_umk3p_ml.png" />
		<image state="21" file="c_sub_zero_umk3p_ml.png" />
		<image state="22" file="h_smoke_umk3p_ml.png" />
		<image state="23" file="noob_saibot_ml.png" />
		<image state="25" file="shao_kahn_ml.png" />
		<image state="26" file="rain_ml.png" />
		<image state="27" file="question.png" />
		<image state="28" file="question.png" />
<!--	<image state="29" file="question.png" />  -->
		<image state="30" file="blankml.png" />
	</element>
	<view name="bezel">
		<screen index="0">
			<bounds x="365" y="90" width="1200" height="900"/>
		</screen>
		<element ref="border">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<element id="bg_p1" ref="background">
			<bounds x="0" y="466" width="417" height="614" />
		</element>
		<element id="bg_p2" ref="background">
			<orientation flipX="yes"/>
			<bounds x="1503" y="466" width="417" height="614" />
		</element>	
		<element id="pt_p1" ref="portrait">
			<bounds x="0" y="10" width="380" height="467" />
		</element>
		<element id="pt_p2" ref="portrait">
			<orientation flipX="yes"/>
			<bounds x="1540" y="10" width="380" height="467" />
		</element>
		<element id="ml_p1" ref="movelist">
			<bounds x="29" y="580" width="241" height="360" />
		</element>
		<element id="ml_p2" ref="movelist">
			<bounds x="1650" y="580" width="241" height="360" />
		</element>
	</view>
	<view name="no_bezel">
		<screen index="0">
			<bounds x="246" y="0" width="1428" height="1080"/>
		</screen>
		<element ref="nobezel">
			<bounds x="0" y="0" width="1920" height="1080"/>
		</element>
		<element id="bg_p1" ref="background">
			<bounds x="0" y="466" width="320" height="614" />
		</element>
		<element id="bg_p2" ref="background">
			<orientation flipX="yes"/>
			<bounds x="1600" y="466" width="320" height="614" />
		</element>	
		<element id="pt_p1" ref="portrait">
			<bounds x="0" y="173" width="247" height="304" />
		</element>
		<element id="pt_p2" ref="portrait">
			<orientation flipX="yes"/>
			<bounds x="1673" y="173" width="247" height="304" />
		</element>
		<element id="ml_p1" ref="movelist">
			<bounds x="25" y="580" width="188" height="360" />
		</element>
		<element id="ml_p2" ref="movelist">
			<bounds x="1710" y="580" width="188" height="360" />
		</element>
	</view>
	<script><![CDATA[
        file:set_resolve_tags_callback(
		function()
			local cpu = file.device:subdevice(":maincpu")
			local mem = cpu.spaces["program"]
			local p1char = file.views["bezel"].items["pt_p1"]
			local p2char = file.views["bezel"].items["pt_p2"]
			local p1bg = file.views["bezel"].items["bg_p1"]
			local p2bg = file.views["bezel"].items["bg_p2"]
			local p1ml = file.views["bezel"].items["ml_p1"]
			local p2ml = file.views["bezel"].items["ml_p2"]
			local p1char_nb = file.views["no_bezel"].items["pt_p1"]
			local p2char_nb = file.views["no_bezel"].items["pt_p2"]
			local p1bg_nb = file.views["no_bezel"].items["bg_p1"]
			local p2bg_nb = file.views["no_bezel"].items["bg_p2"]
			local p1ml_nb = file.views["no_bezel"].items["ml_p1"]
			local p2ml_nb = file.views["no_bezel"].items["ml_p2"]
			file.views["bezel"]:set_prepare_items_callback(
				function()
					
					-- Grab non match screens and display blank.png
					
					if 
						mem:read_u8(0x01060960) == 1 and (mem:read_u16(0x0105C3F0) == 0 or mem:read_u16(0x0105C3F0) == 21152 or mem:read_u16(0x0105C3F0) == 37520 or mem:read_u16(0x0105C3F0) == 21456 or mem:read_u16(0x0105C3F0) == 31024) or
						mem:read_u8(0x01060960) == 0 or
						mem:read_u8(0x01060960) == 3 or
						mem:read_u8(0x01060960) == 8 or
						mem:read_u8(0x01060960) == 11 or
						mem:read_u8(0x01060960) == 16 or 
						mem:read_u8(0x01060960) == 18 or
						mem:read_u8(0x01060960) == 19 or
						mem:read_u8(0x01060960) == 20 or
						mem:read_u8(0x01060960) == 22 then
							p1bg:set_state(0)
							p2bg:set_state(0)
							p1char:set_state(30)
							p2char:set_state(30)
							p1ml:set_state(30)
							p2ml:set_state(30)
						
					else
						
					-- If only P1 active on charselect screen, display P1 set P2 as blank	
						
						if mem:read_u8(0x010615E0) == 255 then
							p1bg:set_state(1)
							p2bg:set_state(0)
							p1char:set_state(mem:read_i8(0x01060A30))
							p2char:set_state(30)
							p1ml:set_state(mem:read_i8(0x01060A30))
							p2ml:set_state(30)
							
					-- If only P2 active on charselect screen, display P2 set P1 as blank	
						
						elseif mem:read_u8(0x01060A30) == 255 then
							p1bg:set_state(0)
							p2bg:set_state(1)
							p1char:set_state(30)
							p2char:set_state(mem:read_i8(0x010615E0))
							p1ml:set_state(30)
							p2ml:set_state(mem:read_i8(0x010615E0))
						else
							p1bg:set_state(1)
							p2bg:set_state(1)
							p1char:set_state(mem:read_i8(0x01060A30))
							p2char:set_state(mem:read_i8(0x010615E0))
							p1ml:set_state(mem:read_i8(0x01060A30))
							p2ml:set_state(mem:read_i8(0x010615E0))
						end
					end
				end)
				
				file.views["no_bezel"]:set_prepare_items_callback(
				function()
					
					-- Grab non match screens and display blank.png
					
					if 
						mem:read_u8(0x01060960) == 1 and (mem:read_u16(0x0105C3F0) == 0 or mem:read_u16(0x0105C3F0) == 21152 or mem:read_u16(0x0105C3F0) == 37520 or mem:read_u16(0x0105C3F0) == 21456 or mem:read_u16(0x0105C3F0) == 31024) or
						mem:read_u8(0x01060960) == 0 or
						mem:read_u8(0x01060960) == 3 or
						mem:read_u8(0x01060960) == 8 or
						mem:read_u8(0x01060960) == 11 or
						mem:read_u8(0x01060960) == 16 or 
						mem:read_u8(0x01060960) == 18 or
						mem:read_u8(0x01060960) == 19 or
						mem:read_u8(0x01060960) == 20 or
						mem:read_u8(0x01060960) == 22 then
							p1bg_nb:set_state(0)
							p2bg_nb:set_state(0)
							p1char_nb:set_state(30)
							p2char_nb:set_state(30)
							p1ml_nb:set_state(30)
							p2ml_nb:set_state(30)
						
					else
						
					-- If only P1 active on charselect screen, display P1 set P2 as blank	
						
						if mem:read_u8(0x010615E0) == 255 then
							p1bg_nb:set_state(1)
							p2bg_nb:set_state(0)
							p1char_nb:set_state(mem:read_i8(0x01060A30))
							p2char_nb:set_state(30)
							p1ml_nb:set_state(mem:read_i8(0x01060A30))
							p2ml_nb:set_state(30)
							
					-- If only P2 active on charselect screen, display P2 set P1 as blank	
						
						elseif mem:read_u8(0x01060A30) == 255 then
							p1bg_nb:set_state(0)
							p2bg_nb:set_state(1)
							p1char_nb:set_state(30)
							p2char_nb:set_state(mem:read_i8(0x010615E0))
							p1ml_nb:set_state(30)
							p2ml_nb:set_state(mem:read_i8(0x010615E0))
						else
							p1bg_nb:set_state(1)
							p2bg_nb:set_state(1)
							p1char_nb:set_state(mem:read_i8(0x01060A30))
							p2char_nb:set_state(mem:read_i8(0x010615E0))
							p1ml_nb:set_state(mem:read_i8(0x01060A30))
							p2ml_nb:set_state(mem:read_i8(0x010615E0))
						end
					end
				end)
				
		end)
]]></script>
</mamelayout>
