<?xml version="1.0"?>

<!-- Authors - InigoMontoya (CoinOps Discord:https://discord.gg/RfMxcFvg), Hugo_Stiglitz_DA (Discord:https://discord.gg/2QesVywnJx),
Artwork - BloodyDrake -->

<mamelayout version="2">
	<element name="border">
		<image file="mshvsf_bezel.png"/>
	</element>
	<element name="portrait_left" defstate="0xFF">
		<image state="0x02" file="cyclops_left.png" />
		<image state="0x04" file="cap_america_left.png" />
		<image state="0x06" file="hulk_left.png" />
		<image state="0x08" file="wolverine_left.png" />
		<image state="0x0A" file="shuma_gorath_left.png" />
		<image state="0x0C" file="omega_red_left.png" />
		<image state="0x0E" file="spider_man_left.png" />
		<image state="0x10" file="blackheart_left.png" />
		<image state="0X12" file="ryu_left.png" />
		<image state="0x14" file="ken_left.png" />
		<image state="0x16" file="chun_li_left.png" />
		<image state="0x18" file="dhalsim_left.png" />
		<image state="0x1A" file="zangief_left.png" />
		<image state="0x1C" file="m_bison_left.png" />
		<image state="0X1E" file="akuma_left.png" />
		<image state="0x20" file="sakura_left.png" />
		<image state="0x22" file="blank.png" />
		<image state="0x24" file="dan_left.png" />
		<image state="0x26" file="mech_akuma_left.png" />
		<image state="0x28" file="mech_zangief_left.png" />
		<image state="0x2A" file="sunburned_sakura_left.png" />
		<image state="0X2C" file="shadow_left.png" />
		<image state="0x2E" file="us_agent_left.png" />
		<image state="0x30" file="mephisto_left.png" />
		<image state="0x32" file="armor_spider_man_left.png" />
		<image state="0xFF" file="blank.png" />
	</element>
	<element name="portrait_right" defstate="0xFF">
		<image state="0x02" file="cyclops_right.png" />
		<image state="0x04" file="cap_america_right.png" />
		<image state="0x06" file="hulk_right.png" />
		<image state="0x08" file="wolverine_right.png" />
		<image state="0x0A" file="shuma_gorath_right.png" />
		<image state="0x0C" file="omega_red_right.png" />
		<image state="0x0E" file="spider_man_right.png" />
		<image state="0x10" file="blackheart_right.png" />
		<image state="0X12" file="ryu_right.png" />
		<image state="0x14" file="ken_right.png" />
		<image state="0x16" file="chun_li_right.png" />
		<image state="0x18" file="dhalsim_right.png" />
		<image state="0x1A" file="zangief_right.png" />
		<image state="0x1C" file="m_bison_right.png" />
		<image state="0X1E" file="akuma_right.png" />
		<image state="0x20" file="sakura_right.png" />
		<image state="0x22" file="blank.png" />
		<image state="0x24" file="dan_right.png" />
		<image state="0x26" file="mech_akuma_right.png" />
		<image state="0x28" file="mech_zangief_right.png" />
		<image state="0x2A" file="sunburned_sakura_right.png" />
		<image state="0X2C" file="shadow_right.png" />
		<image state="0x2E" file="us_agent_right.png" />
		<image state="0x30" file="mephisto_right.png" />
		<image state="0x32" file="armor_spider_man_right.png" />
		<image state="0xFF" file="blank.png" />
	</element>
		<view name="Bezel">
			<screen index="0">
				<bounds x="360" y="98" width="1204" height="884"/>
			</screen>
			<element ref="border">
				<bounds x="0" y="0" width="1920" height="1080"/>
			</element>
			<element id="pt_p1" ref="portrait_left">
				<bounds x="0" y="0" width="468" height="1080"/>
			</element>
			<element id="pt_p2" ref="portrait_right">
				<bounds x="1452" y="0" width="468" height="1080"/>
			</element>
		</view>
	<script><![CDATA[
		file:set_resolve_tags_callback(
			function()
				local cpu = file.device:subdevice(":maincpu")
				local mem = cpu.spaces["program"]
				local p1char = file.views["Bezel"].items["pt_p1"]
				local p2char = file.views["Bezel"].items["pt_p2"]
				file.views["Bezel"]:set_prepare_items_callback(
					function()
						if mem:read_u8(0xFF0080) == 1 or
							(mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF81C3) == 255) then
							p1char:set_state(mem:read_u8(0xFF3853))
							p2char:set_state(mem:read_u8(0xFF3C53))
						elseif (mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6f93) == 255 and mem:read_u8(0xFF3800) == 0 and mem:read_u8(0xFF3C00) == 0) then
							p1char:set_state(mem:read_u8(0xFF4053))
							p2char:set_state(mem:read_u8(0xFF4453))
						elseif (mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6f93) == 255 and mem:read_u8(0xFF3800) == 1 and mem:read_u8(0xFF3C00) == 1) then
							p1char:set_state(mem:read_u8(0xFF3853))
							p2char:set_state(mem:read_u8(0xFF3C53))
						elseif (mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6f93) == 255 and mem:read_u8(0xFF3800) == 0 and mem:read_u8(0xFF3C00) == 1) then
							p1char:set_state(mem:read_u8(0xFF4053))
							p2char:set_state(mem:read_u8(0xFF3C53))		
						elseif (mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6f93) == 255 and mem:read_u8(0xFF3800) == 1 and mem:read_u8(0xFF3C00) == 0) then
							p1char:set_state(mem:read_u8(0xFF3853))
							p2char:set_state(mem:read_u8(0xFF4453))	
						elseif (mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6F93) == 0 and mem:read_u8(0xFF3A92) == 255) or
							(mem:read_u8(0xFF0000) ~= 0 and mem:read_u8(0xFF6F93) == 0 and mem:read_u8(0xFF3E92) == 255) then
							p1char:set_state(0xFF)
							p2char:set_state(0xFF)		
						else
							p1char:set_state(0xFF)
							p2char:set_state(0xFF)
					end
				end)
			end)
	]]></script>
</mamelayout>